'''
Problem 20:
https://leetcode.com/problems/valid-parentheses/

Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.
An input string is valid if:
Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
'''

class Solution(object):
    def isValid(self, s):
        left=[] #stores next char

        for c in s:
            if c in ['[', '(', '{']:
                left.append(c) # stores a left bracket only
            elif c==')' and left[-1]=='(' and len(left)!=0:
                left.pop  # Remove first in list. No longer needed.
            elif c=='}' and left[-1]=='{' and len(left)!=0:
                left.pop # Remove first in list. No longer needed.
            elif c=='}' and left[-1]=='{' and len(left)!=0:
                left.pop # Remove first in list. No longer needed.
            else:
                return False
        return True # Cycled through entire s String without discovering a False statement
        
'''
My attempt two using a dictionary gets the correct answer initially, but then gets runTime error on the following line: 
    if dic[temp]==x:
'''
Class Solution(object):
    def isValid(self, s):
        if not s or len(s)%2!=0:
            return False
        
        dic={'(':')', '[':']', '{':'}' }
        keys=dic.keys
        #print(keys)
        temp=''
        for x in s:
            if x in dic:
                temp=temp+x
            else:
                if dic[temp]==x:
                    temp=''
                else:
                    return False
        return True
        
